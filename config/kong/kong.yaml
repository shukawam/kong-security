_format_version: "3.0"
_transform: true

services:
  - name: httpbin-service
    url: https://httpbin.org
    routes:
      - name: httpbin-route
        paths:
          - /mock
        strip_path: true

plugins:
  ################
  # Security
  ################
  - name: openid-connect
    service: httpbin-service
    config:
      issuer: ${{ env "DECK_ISSUER"}}
      client_id:
        - ${{ env "DECK_CLIENT_ID"}}
      client_secret:
        - ${{ env "DECK_CLIENT_SECRET"}}
      audience: 
        - "http://localhost:8000/"
      # This setting is for demonstration purposes only.
      # Password flow is not recommended for production use.
      auth_methods: [password]
      authenticated_groups_claim:
        - ${{ env "DECK_AUTHENTICATED_GROUPS_CLAIM" }}
      scopes: ["openid", "profile", "email"]
  - name: acl
    service: httpbin-service
    config:
      allow:
        - admin
  - name: rate-limiting-advanced
    service: httpbin-service
    config:
      limit:
        - 5
      window_size:
        - 60
      window_type: sliding
      identifier: ip
      strategy: redis
      sync_rate: 0
      namespace: counter-storage
      redis:
        host: redis
        port: 6379

  ################
  # Observability
  ################
  - name: opentelemetry
    config:
      traces_endpoint: http://otel-collector:4318/v1/traces
  - name: http-log
    config:
      http_endpoint: http://fluent-bit:2020
      custom_fields_by_lua:
        traceid: |
          local h = kong.request.get_header('traceparent')
          return h:match("%-([a-f0-9]+)%-[a-f0-9]+%-")
        spanid: |
          local h = kong.request.get_header('traceparent')
          return h:match("%-[a-f0-9]+%-([a-f0-9]+)%-")
  - name: prometheus
    config:
      per_consumer: true
      status_code_metrics: true
      ai_metrics: true
      latency_metrics: true
      bandwidth_metrics: true
      upstream_health_metrics: true
      wasm_metrics: false
